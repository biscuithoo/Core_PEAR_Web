@using Microsoft.AspNetCore.Identity
@using NTU_FYP_PEAR_CORE_20.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext _db



<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {

    <li class="nav-item dropdown">
        @if (_db.Users.Find(UserManager.GetUserId(User)).profilePicture == null)
        {
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color:black">
                <!--<img src="https://s3.eu-central-1.amazonaws.com/bootstrapbaymisc/blog/24_days_bootstrap/fox.jpg" style="border-style: solid; border-width: thin; border-color:gray" width="40" height="40" class="rounded-circle"> -->
                @Html.Raw(Cloudinary.Api.UrlImgUp.Signed(true).Secure().Action("fetch")
                            .Transform(new Transformation()
                            .Width(40)
                            .Height(40)
                            .Crop("thumb")
                            .Radius(20)
                            .Chain())// apply current stack of transformations before processing next)
                            .BuildImageTag(
                            Constants.Image.URL + Constants.Image.placeholderURL
                            ))
            </a>
        }
        else
        {
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color:black">
                <!--<img src="https://s3.eu-central-1.amazonaws.com/bootstrapbaymisc/blog/24_days_bootstrap/fox.jpg" style="border-style: solid; border-width: thin; border-color:gray" width="40" height="40" class="rounded-circle"> -->
                @Html.Raw(Cloudinary.Api.UrlImgUp.Signed(true).Secure().Action("fetch")
                            .Transform(new Transformation()
                            .Width(40)
                            .Height(40)
                            .Crop("thumb")
                            .Radius(20)
                            .Chain())// apply current stack of transformations before processing next)
                            .BuildImageTag(
                            Constants.Image.URL + _db.Users.Find(UserManager.GetUserId(User)).profilePicture
                            ))
            </a>
        }
        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownMenuLink">
            <div class="dropdown-item disabled">
                <strong> @UserManager.GetUserName(User).ToUpper()</strong>
            </div>
            <div class="dropdown-divider"></div>
            <a id="manage" class="dropdown-item text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Edit Profile"> Edit Profile</a>
            <form id="logoutForm" class="dropdown-item form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <a class="text-dark text-decoration-none" id="logout" href="javascript:{}" onclick="document.getElementById('logoutForm').submit();">Logout</a>
            </form>
        </div>
    </li>
    }
</ul>